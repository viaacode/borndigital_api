<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:objectstore="http://www.mulesoft.org/schema/mule/objectstore"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/objectstore http://www.mulesoft.org/schema/mule/objectstore/current/mule-objectstore.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">

	<sub-flow name="ref:getMilli">
        <set-variable variableName="getMilli" value="#[function:systime]" doc:name="getMilli"/>
    </sub-flow>
    
    <flow name="checkResults">
    	<choice doc:name="Choice">
            <when expression="#[payload.size() &gt; 0]">
                <logger message="Got #[payload.size()] results from #[flowVars.sources]" level="INFO" doc:name="Logger"/>
            </when>
            <otherwise>
                <flow-ref name="throw404" doc:name="throw404"/>
            </otherwise>
        </choice>
    </flow>
    <flow name="retrieveAuthorisedOrganisationsFromHeader">
        <set-variable variableName="authorisation_header" value="#[message.inboundProperties.'${authorisation.header}']" doc:name="Set  authorisation_header"/>
        <logger message="Header: #[flowVars.authorisation_header]" level="INFO" doc:name="Logger"/>
        <set-variable variableName="authorised_organisations" value="#[[]]" doc:name="Set authorised_organisation_array"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.authorisation_header.contains(',O=')]">
                <foreach collection="#[flowVars.authorisation_header.substring(flowVars.authorisation_header.indexOf('O=OR-'),flowVars.authorisation_header.indexOf(',DC=')).split(',O=')]" doc:name="For Each">
                    <set-variable variableName="or_id" value="#[payload.replace('O=','')]" doc:name="Set or_id without ,o="/>
                    <expression-component doc:name="Add to array"><![CDATA[#[flowVars.authorised_organisations.add(flowVars.or_id)]]]></expression-component>
                </foreach>
            </when>
            <otherwise>
                <foreach collection="#[flowVars.authorisation_header.substring(flowVars.authorisation_header.indexOf('O=OR-'),flowVars.authorisation_header.indexOf('/CN=')).split('/O=')]" doc:name="For Each organisation">
                    <set-variable variableName="or_id" value="#[payload.replace('O=','')]" doc:name="Set or_id without ,o="/>
                    <expression-component doc:name="Add to array"><![CDATA[#[flowVars.authorised_organisations.add(flowVars.or_id)]]]></expression-component>
                </foreach>
            </otherwise>
        </choice>
    </flow>
    
    <flow name="ref:borndigital-call">
        <expression-component doc:name="Add borndigital as source"><![CDATA[if (flowVars.sources == null) {
	flowVars.sources = new java.util.ArrayList();
}

if (!flowVars.sources.contains("borndigital")) {
	flowVars.sources.add("borndigital");
}]]></expression-component>
        <ee:cache doc:name="Cache">
            <db:select config-ref="Borndigital" doc:name="Database">
                <db:dynamic-query><![CDATA[#[payload]]]></db:dynamic-query>
            </db:select>
        </ee:cache>
        <choice doc:name="Choice">
            <when expression="#[payload.size() &gt; 0]">
                <logger message="Got #[payload.size()] results from borndigital" level="INFO" doc:name="Logger"/>
            </when>
            <otherwise>
                <flow-ref name="throw404" doc:name="throw404"/>
            </otherwise>
        </choice>
    </flow>
    
        <flow name="ref:sips-call">
        <expression-component doc:name="Add sips as source"><![CDATA[if (flowVars.sources == null) {
	flowVars.sources = new java.util.ArrayList();
}

if (!flowVars.sources.contains("sips")) {
	flowVars.sources.add("sips");
}]]></expression-component>
        <ee:cache doc:name="Cache">
            <db:select config-ref="Sips" doc:name="Database">
                <db:dynamic-query><![CDATA[#[payload]]]></db:dynamic-query>
            </db:select>
        </ee:cache>
        <choice doc:name="Choice">
            <when expression="#[payload.size() &gt; 0]">
                <logger message="Got #[payload.size()] results from borndigital" level="INFO" doc:name="Logger"/>
            </when>
            <otherwise>
                <flow-ref name="throw404" doc:name="throw404"/>
            </otherwise>
        </choice>
    </flow>
    
    <flow name="create_response">
        <logger message="Creating response with #[payload]" level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"header": {
		"timestamp": flowVars['getMilli'],
		"path": flowVars["path"] ,
        "description": flowVars['description'],
        "status": "success",
        "message": "",
        "statuscode": 200,
        ("total": flowVars.total) when flowVars.total?,
        "sources": flowVars['sources'],
        (from: flowVars.from) when flowVars.from != null,
        (until: flowVars.until) when flowVars.until != null
	},
	"data": (payload) when (payload != null and (sizeOf payload) > 0 == true) otherwise []
	
}]]></dw:set-payload>
        </dw:transform-message>
        <byte-array-to-string-transformer doc:name="Byte Array to String"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <sub-flow name="throw404">
        <set-payload value="[#[flowVars.description]] returned no results." doc:name="Returned no results"/>
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy"><![CDATA[throw new org.mule.module.apikit.exception.NotFoundException((java.lang.String) payload);]]></scripting:script>
        </scripting:component>
        <set-property propertyName="http.status" value="404" doc:name="Property"/>
    </sub-flow>

</mule>